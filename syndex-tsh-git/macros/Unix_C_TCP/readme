(c)INRIA 2001

This directory includes all the source files needed for different target
architectures in order to translate the macrocode generated by SynDEx into
source files compilable by the target compilation chain.

Most of these files contain target-dependent definitions of the generic set of
macros generated by SynDEx.  They must be processed by the m4 macro processor
(GNU version REQUIRED!) before the SynDEx generated files.
Generated makefiles are expected to be processed by the GNU version of make.

----------------------------------
Generic (target-independent) files

syndex.m4x
  target-independent part of the "generic executive kernel" set of macros,
  which rely on target-dependent macros defined in other *.m4x files
  (the "x" in ".m4x" comes from the "x" of eXecutive);
  "include(syndex.m4x)" is the first line of every SynDEx generated executive

syndex.m4m
  target-independent part of the makefile-generator set of macros,
  which rely on target-dependent macros defined in other *.m4m files
  (the last "m" in ".m4m" comes from the first "m" of Makefile);
  "include(syndex.m4m)" is the first line of every SynDEx generated makefile;
  the m4 command to translate the generated makefile is expected to be part of
  a main Makefile which is expected to be processed by the GNU version of make
  (see the ega1, ega2u, and comms directories for example main Makefiles)

----------------------------------
Monoprocessor target architectures

C.m4x
  executive macros specific for SynDEx type "C" processors,
  usable only for monoprocessor architectures;
  target language = C; included by other C target language architectures

C.m4m
  makefile macros specific for SynDEx type "C" processors,
  usable only for monoprocessor architectures;
  generate $(CC) C-compiler compilation commands

-------------------------------------
Multiworkstation target architectures

U.m4x
  executive macros specific for SynDEx type "U" processors,
  relying on the Unix/Linux operating system;
  target language = C (includes C.m4x);
  usable for multiworkstation target architectures, but interprocessor
  communications macros, because they are dependent on the communication
  media type, must be defined in another <mediaType>.m4x file

TCP.m4x
  executive macros specific for SynDEx type "TCP" communication media,
  relying on the TCP/IP procotocol through the C "stdio" library;
  target language = C (C.m4x is expected to have been included)

U.m4m
  makefile macros specific for SynDEx type "U" processors,
  relying on the Unix/Linux operating system;
  Unix version dependencies (mainly linker libraries) are taken into account
  through the "uname" Unix command;
  usable for multiworkstation target, uses the rshcd shell-script

rshcd
  shell-script required by U.m4m to compile remotely the SynDEx executives 

--------------------------------------
Intel i80x86 (PC) target architectures (to come)
  x86.m4x, x86.m4m (GNU as for DJGPP/DOS or maybe GCC/Linux)

--------------------------------------------------
Intel i80c196 microcontroller target architectures (to come)
  x96.m4x, x96.m4m, UART.m4x (RS232, x96-x86 comms)

----------------------------------------------------
Motorola MPC555 microcontroller target architectures (to come)
  555.m4x, 555.m4m, USART.m4x, CAN.m4x (CAN-2.0b, 555-x86 comms)

-----------------------------------------------------
Motorola mc68332 microcontroller target architectures (maybe to come)
  332.m4x, 332.m4m, CAN.m4x (CAN-2.0a, 332-x86 comms)

---------------------------------------------------
Texas Instrument TMS230C40 DSP target architectures (to come)
  C40.m4x, C40.m4m, TDMB410.m4x (4*TIM40 motherboard, C40-x86 comms)

---------------------------------------------------------
Analog Devices "SHARC" ADSP21060 DSP target architectures (maybe to come)
  SHARC.m4x, SHARC.m4m (host motherboard yet unknown)

-------------------------------------
Inmos Transputer target architectures (maybe to come)
  T800.m4x, T800.m4m, B008.m4x (10*TRAM motherboard, T800-x86 comms)

----------------------------------
Your favorite target architectures (contribution welcome)
