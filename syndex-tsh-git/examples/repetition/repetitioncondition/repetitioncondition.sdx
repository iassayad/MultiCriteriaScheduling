syndex_version : "6.6.0"

# Libraries
include "int.sdx";
include "u.sdx";

# Algorithms
def algorithm dpacc  300,159:
 ? int[1] acc 1 @20,120;
 ? int[1] s2 2 @0,40;
 ? int[1] s1 3 @0,0;
 ! int[1] acc 1 @260,62;
conditions: true;
references:
 int/Arit_add<1> add @160,20;
 int/Arit_mul<1> mul @60,0;
dependences:
 strong_precedence_data s1 -> mul.a;
 strong_precedence_data add.o -> acc;
 strong_precedence_data acc -> add.b;
 strong_precedence_data mul.o -> add.a;
 strong_precedence_data s2 -> mul.b;

def algorithm dp <dpaccn> 303,121:
 ? int[dpaccn] v2 1 @10,87;
 ? int[dpaccn] v1 2 @12,58;
 ! int[1] dp 1 @270,8;
conditions: true;
references:
 dpacc dpacc @130,23;
 int/cst<{0}> zero @47,8;
dependences:
 strong_precedence_data v2 -> dpacc.s2;
 strong_precedence_data zero.o -> dpacc.acc;
 strong_precedence_data v1 -> dpacc.s1;
 strong_precedence_data dpacc.acc -> dp;

def algorithm prodmatvec <a;b> 245,171:
 ? int[a] vin 1 @5,120;
 ? int[a*b] m1 2 @8,8;
 ! int[b] vout 1 @208,38;
conditions: true;
references:
 dp<a> dotprod @83,24;
dependences:
 strong_precedence_data dotprod.dp -> vout;
 strong_precedence_data m1 -> dotprod.v1;
 strong_precedence_data vin -> dotprod.v2;

def algorithm cond <c1;c2> 254,182:
 ? int[1] x 1 @11,154;
 ? int[c1*c2] m 2 @10,94;
 ? int[c1] v 3 @16,22;
 ! int[c2] o 1 @225,41;
conditions: x = 0;
references:
 prodmatvec<c1;c2> matprodvec @84,63;
dependences:
 strong_precedence_data matprodvec.vout -> o;
 strong_precedence_data v -> matprodvec.vin;
 strong_precedence_data m -> matprodvec.m1;
conditions: x = 1;
references:
dependences:
 strong_precedence_data v -> o;

def algorithm m <N;M> 412,202:
conditions: true;
references:
 cond<N;M> c @296,146;
 int/input<1> select @140,109;
 int/input<N> inVect @143,242;
 int/output<M> outVec @435,165;
 int/input<N*M> inMat @145,170;
dependences:
 strong_precedence_data inVect.o -> c.v;
 strong_precedence_data select.o -> c.x;
 strong_precedence_data c.o -> outVec.i;
 strong_precedence_data inMat.o -> c.m;


# Architectures

# Main Algorithm / Main Architecture
main algorithm m <3;3>;
main architecture u/biProc;

# Extra durations
extra_durations_operator u/U :
v = 2;
CondI = 4;
cond = 36;
outv = 5;
Explode_int = 3;
Implode_int = 3;
mat = 4;
CondO = 3;
extra_durations_media u/TCP :
float = 2;
float = 2;
float = 2;
float = 2;
float = 2;
bool = 1;
bool = 1;
bool = 1;
bool = 1;
bool = 1;
ushort = 1;
ushort = 1;
ushort = 1;
ushort = 1;
ushort = 1;
lint = 1;
lint = 1;
lint = 1;
lint = 1;
lint = 1;
uchar = 1;
uchar = 1;
uchar = 1;
uchar = 1;
uchar = 1;
int = 2;
xoint = 2;
int = 2;
int = 2;
int = 2;

# Software components
software_component onRoot : [\\m\inVect] [\\m\inMat] [\\m\select] ;

# Constraints
absolute constraint : onRoot on u/biProc.root ;

# Adequation result
schedules:
operator root:
 //m/c/matprodvec/dotprod_1/zero_root: const (//m/select.o = 0);
 //m/select: 0 .. 3;
 //m/inMat: 3 .. 6;
 //m/inVect: 6 .. 9;
 //m/c/CondI_inMat_c: 9 .. 13;
 //m/c/CondI_inVect_c: 13 .. 17;
 //m/c/matprodvec/Explode_CondI_inMat_c_inMat_o_dotprod: 17 .. 20 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/Explode_CondI_inVect_c_inVect_o_dpacc: 20 .. 23 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/Explode_CondI_inVect_c_inVect_o_dpacc: 23 .. 26 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/Explode_Explode_CondI_inMat_c_inMat_o_dotprod_inMat_o_2_dpacc: 26 .. 29 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/Explode_Explode_CondI_inMat_c_inMat_o_dotprod_inMat_o_0_dpacc: 29 .. 32 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_0/mul: 32 .. 34 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_1/mul: 34 .. 36 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_1/mul: 36 .. 38 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_0/add: 38 .. 40 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_2/mul: 40 .. 42 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_2/mul: 42 .. 44 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_1/add: 44 .. 46 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_2/add: 46 .. 48 (//m/select.o = 0);
operator P1:
 //m/c/matprodvec/dotprod_0/zero_P1: const (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/zero_P1: const (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/Explode_CondI_inVect_c_inVect_o_dpacc: 23 .. 26 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/Explode_Explode_CondI_inMat_c_inMat_o_dotprod_inMat_o_1_dpacc: 29 .. 32 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_0/mul: 32 .. 34 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_0/mul: 34 .. 36 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_1/mul: 36 .. 38 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_0/add: 38 .. 40 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_0/add: 40 .. 42 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_1/dpacc_2/mul: 42 .. 44 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_1/add: 44 .. 46 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_1/add: 46 .. 48 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_2/dpacc_2/add: 48 .. 50 (//m/select.o = 0);
 //m/c/matprodvec/dotprod_0/dpacc_2/add: 50 .. 52 (//m/select.o = 0);
 //m/c/matprodvec/Implode_dotprod_dp: 52 .. 55 (//m/select.o = 0);
 //m/CondO_c_o: 55 .. 58;
 //m/outVec: 58 .. 61;
media tcp1:
 /Send_root_P1(//m/select.o): 3 .. 5;
 /Send_root_P1(//m/c/CondI_inVect_c.inVect_o)_0: 17 .. 23 (//m/select.o = 1);
 /Send_root_P1(//m/c/CondI_inVect_c.inVect_o): 17 .. 23 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/Explode_CondI_inMat_c_inMat_o_dotprod.inMat_o_1): 23 .. 29 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_0/Explode_CondI_inVect_c_inVect_o_dpacc.inVect_o_0): 29 .. 31 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_0/Explode_Explode_CondI_inMat_c_inMat_o_dotprod_inMat_o_0_dpacc.inMat_o_0_0): 32 .. 34 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_2/dpacc_0/mul.o): 34 .. 36 (//m/select.o = 0);
 /Send_P1_root(//m/c/matprodvec/dotprod_1/dpacc_0/mul.o): 36 .. 38 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_2/dpacc_1/mul.o): 38 .. 40 (//m/select.o = 0);
 /Send_P1_root(//m/c/matprodvec/dotprod_1/dpacc_1/mul.o): 40 .. 42 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_0/dpacc_1/mul.o): 42 .. 44 (//m/select.o = 0);
 /Send_P1_root(//m/c/matprodvec/dotprod_1/dpacc_2/mul.o): 44 .. 46 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_2/dpacc_2/mul.o): 46 .. 48 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_0/dpacc_2/mul.o): 48 .. 50 (//m/select.o = 0);
 /Send_root_P1(//m/c/matprodvec/dotprod_1/dpacc_2/add.o): 50 .. 52 (//m/select.o = 0);
