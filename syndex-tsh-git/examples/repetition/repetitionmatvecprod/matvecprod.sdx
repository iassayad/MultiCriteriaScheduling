syndex_version : "6.6.0"

# Libraries
include "int.sdx";
include "u.sdx";

# Algorithms
def algorithm inputMat <lengthRow;lengthColumn> 327,77:
 ! int[lengthRow*lengthColumn] o 1 @265,21;

def algorithm dpacc  300,159:
 ? int[1] s1 1 @0,0;
 ? int[1] s2 2 @0,40;
 ? int[1] acc 3 @20,120;
 ! int[1] acc 1 @260,62;
conditions: true;
references:
 int/Arit_add<1> add @160,20;
 int/Arit_mul<1> mul @60,0;
dependences:
 strong_precedence_data s2 -> mul.b;
 strong_precedence_data mul.o -> add.a;
 strong_precedence_data acc -> add.b;
 strong_precedence_data add.o -> acc;
 strong_precedence_data s1 -> mul.a;

def sensor v <N> 300,300:
 ! int[N] v 1 @270,8;

def actuator outv  300,300:
 ? int[N] v 1 @8,8;

def sensor mat <N;M> 300,300:
 ! int[N*M] m 1 @270,8;

def actuator outm <a;b> 300,300:
 ? int[a*b] m 1 @8,8;

def algorithm dp <dpaccn> 300,175:
 ? int[dpaccn] v1 1 @8,8;
 ? int[dpaccn] v2 2 @8,36;
 ! int[1] dp 1 @270,8;
conditions: true;
references:
 dpacc dpacc @107,19;
 int/cst<{0}> zero @18,108;
dependences:
 strong_precedence_data dpacc.acc -> dp;
 strong_precedence_data v1 -> dpacc.s1;
 strong_precedence_data zero.o -> dpacc.acc;
 strong_precedence_data v2 -> dpacc.s2;

def algorithm prodmatvec <a;b> 300,154:
 ? int[a*b] m1 1 @8,8;
 ? int[b] v2 2 @5,121;
 ! int[a] m 1 @270,8;
conditions: true;
references:
 dp<b> dotprod @126,27;
dependences:
 strong_precedence_data v2 -> dotprod.v2;
 strong_precedence_data m1 -> dotprod.v1;
 strong_precedence_data dotprod.dp -> m;

def algorithm m <lengthRow;lengthColumn> 316,140:
conditions: true;
references:
 prodmatvec<lengthRow;lengthColumn> matprodvec @125,48;
 int/input<lengthColumn> inVec @30,104;
 int/output<lengthRow> outVec @255,48;
 int/input<lengthRow*lengthColumn> inMat @32,31;
dependences:
 strong_precedence_data matprodvec.m -> outVec.i;
 strong_precedence_data inVec.o -> matprodvec.v2;
 strong_precedence_data inMat.o -> matprodvec.m1;


# Architectures
def architecture monoProc 167,92:
operators:
 u/U root @31,24;
 main operator root;
medias:
connections:

def architecture biProc 334,88:
operators:
 u/U root @31,24;
 u/U u2 @283,24;
 main operator root;
medias:
 u/TCP tcp1 broadcast @159,40;
connections:
 u2.x tcp1;
 root.x tcp1;


# Main Algorithm / Main Architecture
main algorithm m <4;4>;
main architecture biProc;

# Extra durations
extra_durations_operator u/U :
v = 1;
CondI = 1;
prodmatvec = 64;
outv = 3;
Explode_int = 3;
Implode_int = 3;
mat = 2;
CondO = 1;
extra_durations_media u/TCP :
float = 2;
bool = 1;
ushort = 1;
lint = 1;
uchar = 1;
int = 2;

# Software components

# Constraints
