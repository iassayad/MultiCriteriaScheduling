syndex_version : "6.6.0"

# Libraries

# Algorithms
def actuator O :
 ? datatype_2[1] in_1 0 ;
description : "Random Actuator"

def algorithm G :
 ? datatype_1[1] in_1 1 ;
 ? datatype_6[1] in_2 2 ;
 ? datatype_3[1] in_3 3 ;
 ! datatype_2[1] out_1 0 ;
description : "Random Operation"

def algorithm F :
 ? datatype_1[1] in_1 1 ;
 ? datatype_3[1] in_2 2 ;
 ! datatype_1[1] out_1 0 ;
description : "Random Operation"

def algorithm E :
 ? datatype_1[1] in_1 1 ;
 ! datatype_3[1] out_1 0 ;
description : "Random Operation"

def algorithm D :
 ? datatype_4[1] in_1 1 ;
 ! datatype_6[1] out_1 0 ;
description : "Random Operation"

def algorithm C :
 ? datatype_1[1] in_1 1 ;
 ! datatype_3[1] out_1 0 ;
description : "Random Operation"

def algorithm B :
 ? datatype_1[1] in_1 1 ;
 ! datatype_1[1] out_1 0 ;
description : "Random Operation"

def algorithm A :
 ? datatype_5[1] in_1 1 ;
 ! datatype_4[1] out_3 4 ;
 ! datatype_1[1] out_4 0 ;
 ! datatype_1[1] out_1 2 ;
 ! datatype_1[1] out_2 3 ;
description : "Random Operation"

def sensor I :
 ! datatype_5[1] out_1 0 ;
description : "Random Sensor"

def algorithm example_algorithm 543,288:
conditions: true;
references:
 I[1] I @93,171;
 A[1] A @154,170;
 C[1] C @255,261;
 B[1] B @255,168;
 D[1] D @254,74;
 E[1] E @356,184;
 F[1] F @361,257;
 G[1] G @468,147;
 O[1] O @575,147;
dependences:
 strong_precedence_data G.out_1 -> O.in_1;
 strong_precedence_data F.out_1 -> G.in_1;
 strong_precedence_data D.out_1 -> G.in_2;
 strong_precedence_data E.out_1 -> G.in_3;
 strong_precedence_data C.out_1 -> F.in_2;
 strong_precedence_data B.out_1 -> F.in_1;
 strong_precedence_data A.out_4 -> E.in_1;
 strong_precedence_data A.out_3 -> D.in_1;
 strong_precedence_data A.out_2 -> C.in_1;
 strong_precedence_data A.out_1 -> B.in_1;
 strong_precedence_data I.out_1 -> A.in_1;


# Architectures
def operator P3 :
gate GATE_TYPE_1 gate_1;
gate GATE_TYPE_2 gate_2;

O = 1.8;
G = 1.5;
F = 1;
E = 2;
D = 3;
C = 1;
B = 1.5;
A = 1;
I = 2;

def operator P2 :
gate GATE_TYPE_1 gate_1;
gate GATE_TYPE_3 gate_2;

O = 2;
G = 1;
F = 2.5;
E = 1.2;
D = 1.7;
C = 3;
B = 1;
A = 1.5;
I = 1.3;

def operator P1 :
gate GATE_TYPE_3 gate_1;
gate GATE_TYPE_2 gate_2;

O = 1.4;
G = 1.4;
F = 2;
E = 1;
D = 3;
C = 2;
B = 3;
A = 2;
I = 1;

def media GATE_TYPE_1 :
sampp;
datatype_1 = 0.5;
datatype_2 = 0.6;
datatype_3 = 0.8;
datatype_4 = 1;
datatype_5 = 1.25;
datatype_6 = 1.4;

def media GATE_TYPE_3 :
sampp;
datatype_1 = 1;
datatype_2 = 1.1;
datatype_3 = 1.3;
datatype_4 = 1.5;
datatype_5 = 1.75;
datatype_6 = 1.9;

def media GATE_TYPE_2 :
sampp;
datatype_1 = 0.5;
datatype_2 = 0.6;
datatype_3 = 0.8;
datatype_4 = 1;
datatype_5 = 1.25;
datatype_6 = 1.4;

def architecture example_architecture 541,293:
operators:
 P1 P1 @332,228;
 P2 P2 @133,88;
 P3 P3 @522,95;
medias:
 GATE_TYPE_1 L2_3 no_broadcast @291,41;
 GATE_TYPE_2 L1_3 no_broadcast @394,173;
 GATE_TYPE_3 L1_2 no_broadcast @190,175;
connections:
 P3.gate_2 L1_3;
 P1.gate_2 L1_3;
 P2.gate_2 L1_2;
 P1.gate_1 L1_2;
 P2.gate_1 L2_3;
 P3.gate_1 L2_3;


# Main Algorithm / Main Architecture
main algorithm example_algorithm ;
main architecture example_architecture;

# Extra durations

# Software components

# Constraints
