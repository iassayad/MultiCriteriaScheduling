syndex_version : "6.7.0"
application description : ""

# Libraries
include "int.sdx";
include "u.sdx";

# Algorithms
def algorithm algo  460,251:
conditions: true;
references:
 int/input<1>  input1 @114,100;
 int/input<1>  input2 @114,192;
 int/Arit_mul<1>  Mul @299,125;
 int/output<1>  output @429,125;
 int/Arit_mul<1>  Mul_1 @304,206;
 int/output<1>  output_1 @432,211;
dependences:
 strong_precedence_data input1.o -> Mul.a;
 strong_precedence_data input2.o -> Mul.b;
 strong_precedence_data Mul.o -> output.i;
 strong_precedence_data input1.o -> Mul_1.a;
 strong_precedence_data input2.o -> Mul_1.b;
 strong_precedence_data Mul_1.o -> output_1.i;
code_phases:  loopseq;


# Architectures
def architecture archi 352,220:
operators:
 u/U root @118,148;
 u/U ourson @268,261;
 u/U izard @355,125;
 main operator root;
medias:
 u/TCP L13 broadcast @203,232;
 u/TCP L13_1 broadcast @228,119;
 u/TCP L13_2 broadcast @350,205;
connections:
 root.y L13;
 ourson.y L13;
 root.x L13_1;
 izard.x L13_1;
 izard.y L13_2;
 ourson.x L13_2;


# Main Algorithm / Main Architecture
main algorithm algo ;
main architecture archi;

# Extra durations
extra_durations_operator u/U :
R = 1.;

# Software components

software_component other :
[\\algo\output_1,attach_ref]
[\\algo\input1,attach_ref]
[\\algo\input2,attach_ref]
[\\algo\output,attach_ref]
;

software_component other1 :
[\\algo\Mul,attach_ref]
;

software_component other3 :
[\\algo\Mul_1,attach_ref]
;

# Constraints
absolute constraint : other on archi.root ;
absolute constraint : other3 on archi.izard ;
absolute constraint : other1 on archi.ourson ;
